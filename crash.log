2020/05/10 23:08:10 [INFO] Terraform version: 0.12.24  
2020/05/10 23:08:10 [INFO] Go runtime version: go1.13.8
2020/05/10 23:08:10 [INFO] CLI args: []string{"/usr/local/bin/terraform", "apply"}
2020/05/10 23:08:10 [DEBUG] Attempting to open CLI config file: /Users/juancorrea/.terraformrc
2020/05/10 23:08:10 [DEBUG] File doesn't exist, but doesn't need to. Ignoring.
2020/05/10 23:08:10 [DEBUG] checking for credentials in "/Users/juancorrea/.terraform.d/plugins"
2020/05/10 23:08:10 [DEBUG] checking for credentials in "/Users/juancorrea/.terraform.d/plugins/darwin_amd64"
2020/05/10 23:08:10 [INFO] CLI command args: []string{"apply"}
2020/05/10 23:08:10 [TRACE] Meta.Backend: no config given or present on disk, so returning nil config
2020/05/10 23:08:10 [TRACE] Meta.Backend: backend has not previously been initialized in this working directory
2020/05/10 23:08:10 [DEBUG] New state was assigned lineage "1a8fba3c-6403-575e-e527-82a3b9a67ae5"
2020/05/10 23:08:10 [TRACE] Meta.Backend: using default local state only (no backend configuration, and no existing initialized backend)
2020/05/10 23:08:10 [TRACE] Meta.Backend: instantiated backend of type <nil>
2020/05/10 23:08:10 [DEBUG] checking for provider in "."
2020/05/10 23:08:10 [WARN] found legacy provider "terraform-provider-strimzi"
2020/05/10 23:08:10 [DEBUG] checking for provider in "/usr/local/bin"
2020/05/10 23:08:10 [DEBUG] checking for provider in ".terraform/plugins/darwin_amd64"
2020/05/10 23:08:10 [DEBUG] checking for provider in "/Users/juancorrea/.terraform.d/plugins"
2020/05/10 23:08:10 [DEBUG] checking for provider in "/Users/juancorrea/.terraform.d/plugins/darwin_amd64"
2020/05/10 23:08:10 [WARN] found legacy provider "terraform-provider-strimzi"
2020/05/10 23:08:10 [DEBUG] found valid plugin: "strimzi", "0.0.0", "/Users/juancorrea/go/src/terraform-extend/strimzi-provider/terraform-provider-strimzi"
2020/05/10 23:08:10 [DEBUG] checking for provisioner in "."
2020/05/10 23:08:10 [DEBUG] checking for provisioner in "/usr/local/bin"
2020/05/10 23:08:10 [DEBUG] checking for provisioner in ".terraform/plugins/darwin_amd64"
2020/05/10 23:08:10 [DEBUG] checking for provisioner in "/Users/juancorrea/.terraform.d/plugins"
2020/05/10 23:08:10 [DEBUG] checking for provisioner in "/Users/juancorrea/.terraform.d/plugins/darwin_amd64"
2020/05/10 23:08:10 [TRACE] Meta.Backend: backend <nil> does not support operations, so wrapping it in a local backend
2020/05/10 23:08:10 [INFO] backend/local: starting Apply operation
2020/05/10 23:08:10 [TRACE] backend/local: requesting state manager for workspace "default"
2020/05/10 23:08:10 [TRACE] backend/local: state manager for workspace "default" will:
 - read initial snapshot from terraform.tfstate
 - write new snapshots to terraform.tfstate
 - create any backup at terraform.tfstate.backup
2020/05/10 23:08:10 [TRACE] backend/local: requesting state lock for workspace "default"
2020/05/10 23:08:10 [TRACE] statemgr.Filesystem: preparing to manage state snapshots at terraform.tfstate
2020/05/10 23:08:10 [TRACE] statemgr.Filesystem: existing snapshot has lineage "a2686d81-9ab3-a94c-f0e4-38ebba988c6f" serial 3
2020/05/10 23:08:10 [TRACE] statemgr.Filesystem: locking terraform.tfstate using fcntl flock
2020/05/10 23:08:10 [TRACE] statemgr.Filesystem: writing lock metadata to .terraform.tfstate.lock.info
2020/05/10 23:08:10 [TRACE] backend/local: reading remote state for workspace "default"
2020/05/10 23:08:10 [TRACE] statemgr.Filesystem: reading latest snapshot from terraform.tfstate
2020/05/10 23:08:10 [TRACE] statemgr.Filesystem: read snapshot with lineage "a2686d81-9ab3-a94c-f0e4-38ebba988c6f" serial 3
2020/05/10 23:08:10 [TRACE] backend/local: retrieving local state snapshot for workspace "default"
2020/05/10 23:08:10 [TRACE] backend/local: building context for current working directory
2020/05/10 23:08:10 [TRACE] terraform.NewContext: starting
2020/05/10 23:08:10 [TRACE] terraform.NewContext: resolving provider version selections
2020/05/10 23:08:11 [TRACE] terraform.NewContext: loading provider schemas
2020/05/10 23:08:11 [TRACE] LoadSchemas: retrieving schema for provider type "strimzi"
2020-05-10T23:08:11.016-0500 [INFO]  plugin: configuring client automatic mTLS
2020-05-10T23:08:11.041-0500 [DEBUG] plugin: starting plugin: path=/Users/juancorrea/go/src/terraform-extend/strimzi-provider/terraform-provider-strimzi args=[/Users/juancorrea/go/src/terraform-extend/strimzi-provider/terraform-provider-strimzi]
2020-05-10T23:08:11.044-0500 [DEBUG] plugin: plugin started: path=/Users/juancorrea/go/src/terraform-extend/strimzi-provider/terraform-provider-strimzi pid=3775
2020-05-10T23:08:11.044-0500 [DEBUG] plugin: waiting for RPC address: path=/Users/juancorrea/go/src/terraform-extend/strimzi-provider/terraform-provider-strimzi
2020-05-10T23:08:11.064-0500 [INFO]  plugin.terraform-provider-strimzi: configuring server automatic mTLS: timestamp=2020-05-10T23:08:11.064-0500
2020-05-10T23:08:11.090-0500 [DEBUG] plugin: using plugin: version=5
2020-05-10T23:08:11.090-0500 [DEBUG] plugin.terraform-provider-strimzi: plugin address: address=/var/folders/q6/xk7zqq0s74v3njyqt9bgr5980000gn/T/plugin786394378 network=unix timestamp=2020-05-10T23:08:11.090-0500
2020/05/10 23:08:11 [TRACE] GRPCProvider: GetSchema
2020/05/10 23:08:11 [TRACE] GRPCProvider: Close
2020-05-10T23:08:11.145-0500 [DEBUG] plugin: plugin process exited: path=/Users/juancorrea/go/src/terraform-extend/strimzi-provider/terraform-provider-strimzi pid=3775
2020-05-10T23:08:11.145-0500 [DEBUG] plugin: plugin exited
2020/05/10 23:08:11 [TRACE] terraform.NewContext: complete
2020/05/10 23:08:11 [TRACE] backend/local: finished building terraform.Context
2020/05/10 23:08:11 [TRACE] backend/local: requesting interactive input, if necessary
2020/05/10 23:08:11 [TRACE] Context.Input: Prompting for provider arguments
2020/05/10 23:08:11 [TRACE] Context.Input: Provider provider.strimzi declared at main.tf:6,1-19
2020/05/10 23:08:11 [TRACE] Context.Input: Input for provider.strimzi: map[string]cty.Value{}
2020/05/10 23:08:11 [TRACE] backend/local: running validation operation
2020/05/10 23:08:11 [INFO] terraform: building graph: GraphTypeValidate
2020/05/10 23:08:11 [TRACE] Executing graph transform *terraform.ConfigTransformer
2020/05/10 23:08:11 [TRACE] ConfigTransformer: Starting for path: 
2020/05/10 23:08:11 [TRACE] Completed graph transform *terraform.ConfigTransformer with new graph:
  strimzi_kafka_topic.mi_prueba - *terraform.NodeValidatableResource
  ------
2020/05/10 23:08:11 [TRACE] Executing graph transform *terraform.LocalTransformer
2020/05/10 23:08:11 [TRACE] Completed graph transform *terraform.LocalTransformer (no changes)
2020/05/10 23:08:11 [TRACE] Executing graph transform *terraform.OutputTransformer
2020/05/10 23:08:11 [TRACE] Completed graph transform *terraform.OutputTransformer (no changes)
2020/05/10 23:08:11 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceTransformer
2020/05/10 23:08:11 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceTransformer (no changes)
2020/05/10 23:08:11 [TRACE] Executing graph transform *terraform.StateTransformer
2020/05/10 23:08:11 [TRACE] StateTransformer: state is empty, so nothing to do
2020/05/10 23:08:11 [TRACE] Completed graph transform *terraform.StateTransformer (no changes)
2020/05/10 23:08:11 [TRACE] Executing graph transform *terraform.OrphanOutputTransformer
2020/05/10 23:08:11 [TRACE] Completed graph transform *terraform.OrphanOutputTransformer (no changes)
2020/05/10 23:08:11 [TRACE] Executing graph transform *terraform.AttachResourceConfigTransformer
2020/05/10 23:08:11 [TRACE] AttachResourceConfigTransformer: attaching to "strimzi_kafka_topic.mi_prueba" (*terraform.NodeValidatableResource) config from main.tf:8,1-43
2020/05/10 23:08:11 [TRACE] Completed graph transform *terraform.AttachResourceConfigTransformer (no changes)
2020/05/10 23:08:11 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/05/10 23:08:11 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/05/10 23:08:11 [TRACE] Executing graph transform *terraform.RootVariableTransformer
2020/05/10 23:08:11 [TRACE] Completed graph transform *terraform.RootVariableTransformer (no changes)
2020/05/10 23:08:11 [TRACE] Executing graph transform *terraform.MissingProvisionerTransformer
2020/05/10 23:08:11 [TRACE] Completed graph transform *terraform.MissingProvisionerTransformer (no changes)
2020/05/10 23:08:11 [TRACE] Executing graph transform *terraform.ProvisionerTransformer
2020/05/10 23:08:11 [TRACE] Completed graph transform *terraform.ProvisionerTransformer (no changes)
2020/05/10 23:08:11 [TRACE] Executing graph transform *terraform.ModuleVariableTransformer
2020/05/10 23:08:11 [TRACE] Completed graph transform *terraform.ModuleVariableTransformer (no changes)
2020/05/10 23:08:11 [TRACE] Executing graph transform *terraform.graphTransformerMulti
2020/05/10 23:08:11 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderConfigTransformer
2020/05/10 23:08:11 [TRACE] ProviderConfigTransformer: attaching to "provider.strimzi" provider configuration from main.tf:6,1-19
2020/05/10 23:08:11 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderConfigTransformer with new graph:
  provider.strimzi - *terraform.NodeApplyableProvider
  strimzi_kafka_topic.mi_prueba - *terraform.NodeValidatableResource
  ------
2020/05/10 23:08:11 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.MissingProviderTransformer
2020/05/10 23:08:11 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.MissingProviderTransformer (no changes)
2020/05/10 23:08:11 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderTransformer
2020/05/10 23:08:11 [TRACE] ProviderTransformer: strimzi_kafka_topic.mi_prueba is provided by provider.strimzi or inherited equivalent
2020/05/10 23:08:11 [TRACE] ProviderTransformer: exact match for provider.strimzi serving strimzi_kafka_topic.mi_prueba
2020/05/10 23:08:11 [DEBUG] ProviderTransformer: "strimzi_kafka_topic.mi_prueba" (*terraform.NodeValidatableResource) needs provider.strimzi
2020/05/10 23:08:11 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderTransformer with new graph:
  provider.strimzi - *terraform.NodeApplyableProvider
  strimzi_kafka_topic.mi_prueba - *terraform.NodeValidatableResource
    provider.strimzi - *terraform.NodeApplyableProvider
  ------
2020/05/10 23:08:11 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.PruneProviderTransformer
2020/05/10 23:08:11 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.PruneProviderTransformer (no changes)
2020/05/10 23:08:11 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ParentProviderTransformer
2020/05/10 23:08:11 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ParentProviderTransformer (no changes)
2020/05/10 23:08:11 [TRACE] Completed graph transform *terraform.graphTransformerMulti with new graph:
  provider.strimzi - *terraform.NodeApplyableProvider
  strimzi_kafka_topic.mi_prueba - *terraform.NodeValidatableResource
    provider.strimzi - *terraform.NodeApplyableProvider
  ------
2020/05/10 23:08:11 [TRACE] Executing graph transform *terraform.RemovedModuleTransformer
2020/05/10 23:08:11 [TRACE] Completed graph transform *terraform.RemovedModuleTransformer (no changes)
2020/05/10 23:08:11 [TRACE] Executing graph transform *terraform.AttachSchemaTransformer
2020/05/10 23:08:11 [TRACE] AttachSchemaTransformer: attaching resource schema to strimzi_kafka_topic.mi_prueba
2020/05/10 23:08:11 [TRACE] AttachSchemaTransformer: attaching provider config schema to provider.strimzi
2020/05/10 23:08:11 [TRACE] Completed graph transform *terraform.AttachSchemaTransformer (no changes)
2020/05/10 23:08:11 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/05/10 23:08:11 [DEBUG] ReferenceTransformer: "strimzi_kafka_topic.mi_prueba" references: []
2020/05/10 23:08:11 [DEBUG] ReferenceTransformer: "provider.strimzi" references: []
2020/05/10 23:08:11 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/05/10 23:08:11 [TRACE] Executing graph transform *terraform.CountBoundaryTransformer
2020/05/10 23:08:11 [TRACE] Completed graph transform *terraform.CountBoundaryTransformer with new graph:
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider.strimzi - *terraform.NodeApplyableProvider
    strimzi_kafka_topic.mi_prueba - *terraform.NodeValidatableResource
  provider.strimzi - *terraform.NodeApplyableProvider
  strimzi_kafka_topic.mi_prueba - *terraform.NodeValidatableResource
    provider.strimzi - *terraform.NodeApplyableProvider
  ------
2020/05/10 23:08:11 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/05/10 23:08:11 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/05/10 23:08:11 [TRACE] Executing graph transform *terraform.ForcedCBDTransformer
2020/05/10 23:08:11 [TRACE] Completed graph transform *terraform.ForcedCBDTransformer (no changes)
2020/05/10 23:08:11 [TRACE] Executing graph transform *terraform.CloseProviderTransformer
2020/05/10 23:08:11 [TRACE] Completed graph transform *terraform.CloseProviderTransformer with new graph:
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider.strimzi - *terraform.NodeApplyableProvider
    strimzi_kafka_topic.mi_prueba - *terraform.NodeValidatableResource
  provider.strimzi - *terraform.NodeApplyableProvider
  provider.strimzi (close) - *terraform.graphNodeCloseProvider
    provider.strimzi - *terraform.NodeApplyableProvider
    strimzi_kafka_topic.mi_prueba - *terraform.NodeValidatableResource
  strimzi_kafka_topic.mi_prueba - *terraform.NodeValidatableResource
    provider.strimzi - *terraform.NodeApplyableProvider
  ------
2020/05/10 23:08:11 [TRACE] Executing graph transform *terraform.CloseProvisionerTransformer
2020/05/10 23:08:11 [TRACE] Completed graph transform *terraform.CloseProvisionerTransformer (no changes)
2020/05/10 23:08:11 [TRACE] Executing graph transform *terraform.RootTransformer
2020/05/10 23:08:11 [TRACE] Completed graph transform *terraform.RootTransformer with new graph:
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider.strimzi - *terraform.NodeApplyableProvider
    strimzi_kafka_topic.mi_prueba - *terraform.NodeValidatableResource
  provider.strimzi - *terraform.NodeApplyableProvider
  provider.strimzi (close) - *terraform.graphNodeCloseProvider
    provider.strimzi - *terraform.NodeApplyableProvider
    strimzi_kafka_topic.mi_prueba - *terraform.NodeValidatableResource
  root - terraform.graphNodeRoot
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider.strimzi (close) - *terraform.graphNodeCloseProvider
  strimzi_kafka_topic.mi_prueba - *terraform.NodeValidatableResource
    provider.strimzi - *terraform.NodeApplyableProvider
  ------
2020/05/10 23:08:11 [TRACE] Executing graph transform *terraform.TransitiveReductionTransformer
2020/05/10 23:08:11 [TRACE] Completed graph transform *terraform.TransitiveReductionTransformer with new graph:
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    strimzi_kafka_topic.mi_prueba - *terraform.NodeValidatableResource
  provider.strimzi - *terraform.NodeApplyableProvider
  provider.strimzi (close) - *terraform.graphNodeCloseProvider
    strimzi_kafka_topic.mi_prueba - *terraform.NodeValidatableResource
  root - terraform.graphNodeRoot
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider.strimzi (close) - *terraform.graphNodeCloseProvider
  strimzi_kafka_topic.mi_prueba - *terraform.NodeValidatableResource
    provider.strimzi - *terraform.NodeApplyableProvider
  ------
2020/05/10 23:08:11 [DEBUG] Starting graph walk: walkValidate
2020/05/10 23:08:11 [TRACE] dag/walk: updating graph
2020/05/10 23:08:11 [TRACE] dag/walk: added new vertex: "provider.strimzi"
2020/05/10 23:08:11 [TRACE] dag/walk: added new vertex: "meta.count-boundary (EachMode fixup)"
2020/05/10 23:08:11 [TRACE] dag/walk: added new vertex: "provider.strimzi (close)"
2020/05/10 23:08:11 [TRACE] dag/walk: added new vertex: "root"
2020/05/10 23:08:11 [TRACE] dag/walk: added new vertex: "strimzi_kafka_topic.mi_prueba"
2020/05/10 23:08:11 [TRACE] dag/walk: added edge: "provider.strimzi (close)" waiting on "strimzi_kafka_topic.mi_prueba"
2020/05/10 23:08:11 [TRACE] dag/walk: added edge: "root" waiting on "meta.count-boundary (EachMode fixup)"
2020/05/10 23:08:11 [TRACE] dag/walk: added edge: "root" waiting on "provider.strimzi (close)"
2020/05/10 23:08:11 [TRACE] dag/walk: added edge: "strimzi_kafka_topic.mi_prueba" waiting on "provider.strimzi"
2020/05/10 23:08:11 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "strimzi_kafka_topic.mi_prueba"
2020/05/10 23:08:11 [TRACE] dag/walk: dependencies changed for "provider.strimzi (close)", sending new deps
2020/05/10 23:08:11 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2020/05/10 23:08:11 [TRACE] dag/walk: dependencies changed for "strimzi_kafka_topic.mi_prueba", sending new deps
2020/05/10 23:08:11 [TRACE] dag/walk: dependencies changed for "meta.count-boundary (EachMode fixup)", sending new deps
2020/05/10 23:08:11 [TRACE] dag/walk: visiting "provider.strimzi"
2020/05/10 23:08:11 [TRACE] vertex "provider.strimzi": starting visit (*terraform.NodeApplyableProvider)
2020/05/10 23:08:11 [TRACE] vertex "provider.strimzi": evaluating
2020/05/10 23:08:11 [TRACE] [walkValidate] Entering eval tree: provider.strimzi
2020/05/10 23:08:11 [TRACE] <root>: eval: *terraform.EvalSequence
2020/05/10 23:08:11 [TRACE] <root>: eval: *terraform.EvalInitProvider
2020-05-10T23:08:11.146-0500 [INFO]  plugin: configuring client automatic mTLS
2020-05-10T23:08:11.170-0500 [DEBUG] plugin: starting plugin: path=/Users/juancorrea/go/src/terraform-extend/strimzi-provider/terraform-provider-strimzi args=[/Users/juancorrea/go/src/terraform-extend/strimzi-provider/terraform-provider-strimzi]
2020-05-10T23:08:11.174-0500 [DEBUG] plugin: plugin started: path=/Users/juancorrea/go/src/terraform-extend/strimzi-provider/terraform-provider-strimzi pid=3776
2020-05-10T23:08:11.174-0500 [DEBUG] plugin: waiting for RPC address: path=/Users/juancorrea/go/src/terraform-extend/strimzi-provider/terraform-provider-strimzi
2020-05-10T23:08:11.194-0500 [INFO]  plugin.terraform-provider-strimzi: configuring server automatic mTLS: timestamp=2020-05-10T23:08:11.194-0500
2020-05-10T23:08:11.219-0500 [DEBUG] plugin.terraform-provider-strimzi: plugin address: address=/var/folders/q6/xk7zqq0s74v3njyqt9bgr5980000gn/T/plugin996824791 network=unix timestamp=2020-05-10T23:08:11.219-0500
2020-05-10T23:08:11.220-0500 [DEBUG] plugin: using plugin: version=5
2020/05/10 23:08:11 [TRACE] BuiltinEvalContext: Initialized "strimzi" provider for provider.strimzi
2020/05/10 23:08:11 [TRACE] <root>: eval: terraform.EvalNoop
2020/05/10 23:08:11 [TRACE] <root>: eval: *terraform.EvalOpFilter
2020/05/10 23:08:11 [TRACE] <root>: eval: *terraform.EvalSequence
2020/05/10 23:08:11 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/05/10 23:08:11 [TRACE] <root>: eval: *terraform.EvalValidateProvider
2020/05/10 23:08:11 [TRACE] buildProviderConfig for provider.strimzi: using explicit config only
2020/05/10 23:08:11 [TRACE] GRPCProvider: GetSchema
2020/05/10 23:08:11 [TRACE] GRPCProvider: PrepareProviderConfig
2020/05/10 23:08:11 [TRACE] <root>: eval: terraform.EvalNoop
2020/05/10 23:08:11 [TRACE] <root>: eval: terraform.EvalNoop
2020/05/10 23:08:11 [TRACE] [walkValidate] Exiting eval tree: provider.strimzi
2020/05/10 23:08:11 [TRACE] vertex "provider.strimzi": visit complete
2020/05/10 23:08:11 [TRACE] dag/walk: visiting "strimzi_kafka_topic.mi_prueba"
2020/05/10 23:08:11 [TRACE] vertex "strimzi_kafka_topic.mi_prueba": starting visit (*terraform.NodeValidatableResource)
2020/05/10 23:08:11 [TRACE] vertex "strimzi_kafka_topic.mi_prueba": evaluating
2020/05/10 23:08:11 [TRACE] [walkValidate] Entering eval tree: strimzi_kafka_topic.mi_prueba
2020/05/10 23:08:11 [TRACE] <root>: eval: *terraform.EvalSequence
2020/05/10 23:08:11 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/05/10 23:08:11 [TRACE] <root>: eval: *terraform.EvalValidateResource
2020/05/10 23:08:11 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2020/05/10 23:08:11 [TRACE] [walkValidate] Exiting eval tree: strimzi_kafka_topic.mi_prueba
2020/05/10 23:08:11 [TRACE] vertex "strimzi_kafka_topic.mi_prueba": visit complete
2020/05/10 23:08:11 [TRACE] dag/walk: visiting "provider.strimzi (close)"
2020/05/10 23:08:11 [TRACE] vertex "provider.strimzi (close)": starting visit (*terraform.graphNodeCloseProvider)
2020/05/10 23:08:11 [TRACE] dag/walk: visiting "meta.count-boundary (EachMode fixup)"
2020/05/10 23:08:11 [TRACE] vertex "provider.strimzi (close)": evaluating
2020/05/10 23:08:11 [TRACE] vertex "meta.count-boundary (EachMode fixup)": starting visit (*terraform.NodeCountBoundary)
2020/05/10 23:08:11 [TRACE] [walkValidate] Entering eval tree: provider.strimzi (close)
2020/05/10 23:08:11 [TRACE] vertex "meta.count-boundary (EachMode fixup)": evaluating
2020/05/10 23:08:11 [TRACE] <root>: eval: *terraform.EvalCloseProvider
2020/05/10 23:08:11 [TRACE] GRPCProvider: Close
2020/05/10 23:08:11 [TRACE] [walkValidate] Entering eval tree: meta.count-boundary (EachMode fixup)
2020/05/10 23:08:11 [TRACE] <root>: eval: *terraform.EvalCountFixZeroOneBoundaryGlobal
2020/05/10 23:08:11 [TRACE] [walkValidate] Exiting eval tree: meta.count-boundary (EachMode fixup)
2020/05/10 23:08:11 [TRACE] vertex "meta.count-boundary (EachMode fixup)": visit complete
2020-05-10T23:08:11.275-0500 [DEBUG] plugin: plugin process exited: path=/Users/juancorrea/go/src/terraform-extend/strimzi-provider/terraform-provider-strimzi pid=3776
2020-05-10T23:08:11.275-0500 [DEBUG] plugin: plugin exited
2020/05/10 23:08:11 [TRACE] [walkValidate] Exiting eval tree: provider.strimzi (close)
2020/05/10 23:08:11 [TRACE] vertex "provider.strimzi (close)": visit complete
2020/05/10 23:08:11 [TRACE] dag/walk: visiting "root"
2020/05/10 23:08:11 [TRACE] vertex "root": starting visit (terraform.graphNodeRoot)
2020/05/10 23:08:11 [TRACE] vertex "root": visit complete
2020/05/10 23:08:11 [INFO] backend/local: apply calling Refresh
2020/05/10 23:08:11 [INFO] terraform: building graph: GraphTypeRefresh
2020/05/10 23:08:11 [TRACE] No managed resources in state during refresh; skipping managed resource transformer
2020/05/10 23:08:11 [TRACE] Executing graph transform *terraform.ConfigTransformer
2020/05/10 23:08:11 [TRACE] ConfigTransformer: Starting for path: 
2020/05/10 23:08:11 [TRACE] Completed graph transform *terraform.ConfigTransformer (no changes)
2020/05/10 23:08:11 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceTransformer
2020/05/10 23:08:11 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceTransformer (no changes)
2020/05/10 23:08:11 [TRACE] Executing graph transform *terraform.StateTransformer
2020/05/10 23:08:11 [TRACE] StateTransformer: state is empty, so nothing to do
2020/05/10 23:08:11 [TRACE] Completed graph transform *terraform.StateTransformer (no changes)
2020/05/10 23:08:11 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/05/10 23:08:11 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/05/10 23:08:11 [TRACE] Executing graph transform *terraform.AttachResourceConfigTransformer
2020/05/10 23:08:11 [TRACE] Completed graph transform *terraform.AttachResourceConfigTransformer (no changes)
2020/05/10 23:08:11 [TRACE] Executing graph transform *terraform.RootVariableTransformer
2020/05/10 23:08:11 [TRACE] Completed graph transform *terraform.RootVariableTransformer (no changes)
2020/05/10 23:08:11 [TRACE] Executing graph transform *terraform.LocalTransformer
2020/05/10 23:08:11 [TRACE] Completed graph transform *terraform.LocalTransformer (no changes)
2020/05/10 23:08:11 [TRACE] Executing graph transform *terraform.OutputTransformer
2020/05/10 23:08:11 [TRACE] Completed graph transform *terraform.OutputTransformer (no changes)
2020/05/10 23:08:11 [TRACE] Executing graph transform *terraform.ModuleVariableTransformer
2020/05/10 23:08:11 [TRACE] Completed graph transform *terraform.ModuleVariableTransformer (no changes)
2020/05/10 23:08:11 [TRACE] Executing graph transform *terraform.graphTransformerMulti
2020/05/10 23:08:11 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderConfigTransformer
2020/05/10 23:08:11 [TRACE] ProviderConfigTransformer: attaching to "provider.strimzi" provider configuration from main.tf:6,1-19
2020/05/10 23:08:11 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderConfigTransformer with new graph:
  provider.strimzi - *terraform.NodeApplyableProvider
  ------
2020/05/10 23:08:11 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.MissingProviderTransformer
2020/05/10 23:08:11 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.MissingProviderTransformer (no changes)
2020/05/10 23:08:11 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderTransformer
2020/05/10 23:08:11 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderTransformer (no changes)
2020/05/10 23:08:11 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.PruneProviderTransformer
2020/05/10 23:08:11 [DEBUG] pruning unused provider.strimzi
2020/05/10 23:08:11 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.PruneProviderTransformer with new graph:
  ------
2020/05/10 23:08:11 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ParentProviderTransformer
2020/05/10 23:08:11 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ParentProviderTransformer (no changes)
2020/05/10 23:08:11 [TRACE] Completed graph transform *terraform.graphTransformerMulti (no changes)
2020/05/10 23:08:11 [TRACE] Executing graph transform *terraform.AttachSchemaTransformer
2020/05/10 23:08:11 [TRACE] Completed graph transform *terraform.AttachSchemaTransformer (no changes)
2020/05/10 23:08:11 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/05/10 23:08:11 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/05/10 23:08:11 [TRACE] Executing graph transform *terraform.AttachDependenciesTransformer
2020/05/10 23:08:11 [TRACE] Completed graph transform *terraform.AttachDependenciesTransformer (no changes)
2020/05/10 23:08:11 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/05/10 23:08:11 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/05/10 23:08:11 [TRACE] Executing graph transform *terraform.CloseProviderTransformer
2020/05/10 23:08:11 [TRACE] Completed graph transform *terraform.CloseProviderTransformer (no changes)
2020/05/10 23:08:11 [TRACE] Executing graph transform *terraform.RootTransformer
2020/05/10 23:08:11 [TRACE] Completed graph transform *terraform.RootTransformer with new graph:
  root - terraform.graphNodeRoot
  ------
2020/05/10 23:08:11 [TRACE] Executing graph transform *terraform.TransitiveReductionTransformer
2020/05/10 23:08:11 [TRACE] Completed graph transform *terraform.TransitiveReductionTransformer (no changes)
2020/05/10 23:08:11 [DEBUG] Starting graph walk: walkRefresh
2020/05/10 23:08:11 [TRACE] dag/walk: updating graph
2020/05/10 23:08:11 [TRACE] dag/walk: added new vertex: "root"
2020/05/10 23:08:11 [TRACE] dag/walk: visiting "root"
2020/05/10 23:08:11 [TRACE] vertex "root": starting visit (terraform.graphNodeRoot)
2020/05/10 23:08:11 [TRACE] vertex "root": visit complete
2020/05/10 23:08:11 [INFO] backend/local: apply calling Plan
2020/05/10 23:08:11 [INFO] terraform: building graph: GraphTypePlan
2020/05/10 23:08:11 [TRACE] Executing graph transform *terraform.ConfigTransformer
2020/05/10 23:08:11 [TRACE] ConfigTransformer: Starting for path: 
2020/05/10 23:08:11 [TRACE] Completed graph transform *terraform.ConfigTransformer with new graph:
  strimzi_kafka_topic.mi_prueba - *terraform.NodePlannableResource
  ------
2020/05/10 23:08:11 [TRACE] Executing graph transform *terraform.LocalTransformer
2020/05/10 23:08:11 [TRACE] Completed graph transform *terraform.LocalTransformer (no changes)
2020/05/10 23:08:11 [TRACE] Executing graph transform *terraform.OutputTransformer
2020/05/10 23:08:11 [TRACE] Completed graph transform *terraform.OutputTransformer (no changes)
2020/05/10 23:08:11 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceTransformer
2020/05/10 23:08:11 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceTransformer (no changes)
2020/05/10 23:08:11 [TRACE] Executing graph transform *terraform.StateTransformer
2020/05/10 23:08:11 [TRACE] StateTransformer: state is empty, so nothing to do
2020/05/10 23:08:11 [TRACE] Completed graph transform *terraform.StateTransformer (no changes)
2020/05/10 23:08:11 [TRACE] Executing graph transform *terraform.OrphanOutputTransformer
2020/05/10 23:08:11 [TRACE] Completed graph transform *terraform.OrphanOutputTransformer (no changes)
2020/05/10 23:08:11 [TRACE] Executing graph transform *terraform.AttachResourceConfigTransformer
2020/05/10 23:08:11 [TRACE] AttachResourceConfigTransformer: attaching to "strimzi_kafka_topic.mi_prueba" (*terraform.NodePlannableResource) config from main.tf:8,1-43
2020/05/10 23:08:11 [TRACE] Completed graph transform *terraform.AttachResourceConfigTransformer (no changes)
2020/05/10 23:08:11 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/05/10 23:08:11 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/05/10 23:08:11 [TRACE] Executing graph transform *terraform.RootVariableTransformer
2020/05/10 23:08:11 [TRACE] Completed graph transform *terraform.RootVariableTransformer (no changes)
2020/05/10 23:08:11 [TRACE] Executing graph transform *terraform.MissingProvisionerTransformer
2020/05/10 23:08:11 [TRACE] Completed graph transform *terraform.MissingProvisionerTransformer (no changes)
2020/05/10 23:08:11 [TRACE] Executing graph transform *terraform.ProvisionerTransformer
2020/05/10 23:08:11 [TRACE] Completed graph transform *terraform.ProvisionerTransformer (no changes)
2020/05/10 23:08:11 [TRACE] Executing graph transform *terraform.ModuleVariableTransformer
2020/05/10 23:08:11 [TRACE] Completed graph transform *terraform.ModuleVariableTransformer (no changes)
2020/05/10 23:08:11 [TRACE] Executing graph transform *terraform.graphTransformerMulti
2020/05/10 23:08:11 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderConfigTransformer
2020/05/10 23:08:11 [TRACE] ProviderConfigTransformer: attaching to "provider.strimzi" provider configuration from main.tf:6,1-19
2020/05/10 23:08:11 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderConfigTransformer with new graph:
  provider.strimzi - *terraform.NodeApplyableProvider
  strimzi_kafka_topic.mi_prueba - *terraform.NodePlannableResource
  ------
2020/05/10 23:08:11 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.MissingProviderTransformer
2020/05/10 23:08:11 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.MissingProviderTransformer (no changes)
2020/05/10 23:08:11 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderTransformer
2020/05/10 23:08:11 [TRACE] ProviderTransformer: strimzi_kafka_topic.mi_prueba is provided by provider.strimzi or inherited equivalent
2020/05/10 23:08:11 [TRACE] ProviderTransformer: exact match for provider.strimzi serving strimzi_kafka_topic.mi_prueba
2020/05/10 23:08:11 [DEBUG] ProviderTransformer: "strimzi_kafka_topic.mi_prueba" (*terraform.NodePlannableResource) needs provider.strimzi
2020/05/10 23:08:11 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderTransformer with new graph:
  provider.strimzi - *terraform.NodeApplyableProvider
  strimzi_kafka_topic.mi_prueba - *terraform.NodePlannableResource
    provider.strimzi - *terraform.NodeApplyableProvider
  ------
2020/05/10 23:08:11 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.PruneProviderTransformer
2020/05/10 23:08:11 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.PruneProviderTransformer (no changes)
2020/05/10 23:08:11 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ParentProviderTransformer
2020/05/10 23:08:11 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ParentProviderTransformer (no changes)
2020/05/10 23:08:11 [TRACE] Completed graph transform *terraform.graphTransformerMulti with new graph:
  provider.strimzi - *terraform.NodeApplyableProvider
  strimzi_kafka_topic.mi_prueba - *terraform.NodePlannableResource
    provider.strimzi - *terraform.NodeApplyableProvider
  ------
2020/05/10 23:08:11 [TRACE] Executing graph transform *terraform.RemovedModuleTransformer
2020/05/10 23:08:11 [TRACE] Completed graph transform *terraform.RemovedModuleTransformer (no changes)
2020/05/10 23:08:11 [TRACE] Executing graph transform *terraform.AttachSchemaTransformer
2020/05/10 23:08:11 [TRACE] AttachSchemaTransformer: attaching resource schema to strimzi_kafka_topic.mi_prueba
2020/05/10 23:08:11 [TRACE] AttachSchemaTransformer: attaching provider config schema to provider.strimzi
2020/05/10 23:08:11 [TRACE] Completed graph transform *terraform.AttachSchemaTransformer (no changes)
2020/05/10 23:08:11 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/05/10 23:08:11 [DEBUG] ReferenceTransformer: "strimzi_kafka_topic.mi_prueba" references: []
2020/05/10 23:08:11 [DEBUG] ReferenceTransformer: "provider.strimzi" references: []
2020/05/10 23:08:11 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/05/10 23:08:11 [TRACE] Executing graph transform *terraform.CountBoundaryTransformer
2020/05/10 23:08:11 [TRACE] Completed graph transform *terraform.CountBoundaryTransformer with new graph:
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider.strimzi - *terraform.NodeApplyableProvider
    strimzi_kafka_topic.mi_prueba - *terraform.NodePlannableResource
  provider.strimzi - *terraform.NodeApplyableProvider
  strimzi_kafka_topic.mi_prueba - *terraform.NodePlannableResource
    provider.strimzi - *terraform.NodeApplyableProvider
  ------
2020/05/10 23:08:11 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/05/10 23:08:11 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/05/10 23:08:11 [TRACE] Executing graph transform *terraform.ForcedCBDTransformer
2020/05/10 23:08:11 [TRACE] ForcedCBDTransformer: "strimzi_kafka_topic.mi_prueba" (*terraform.NodePlannableResource) has no CBD descendent, so skipping
2020/05/10 23:08:11 [TRACE] Completed graph transform *terraform.ForcedCBDTransformer (no changes)
2020/05/10 23:08:11 [TRACE] Executing graph transform *terraform.CloseProviderTransformer
2020/05/10 23:08:11 [TRACE] Completed graph transform *terraform.CloseProviderTransformer with new graph:
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider.strimzi - *terraform.NodeApplyableProvider
    strimzi_kafka_topic.mi_prueba - *terraform.NodePlannableResource
  provider.strimzi - *terraform.NodeApplyableProvider
  provider.strimzi (close) - *terraform.graphNodeCloseProvider
    provider.strimzi - *terraform.NodeApplyableProvider
    strimzi_kafka_topic.mi_prueba - *terraform.NodePlannableResource
  strimzi_kafka_topic.mi_prueba - *terraform.NodePlannableResource
    provider.strimzi - *terraform.NodeApplyableProvider
  ------
2020/05/10 23:08:11 [TRACE] Executing graph transform *terraform.CloseProvisionerTransformer
2020/05/10 23:08:11 [TRACE] Completed graph transform *terraform.CloseProvisionerTransformer (no changes)
2020/05/10 23:08:11 [TRACE] Executing graph transform *terraform.RootTransformer
2020/05/10 23:08:11 [TRACE] Completed graph transform *terraform.RootTransformer with new graph:
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider.strimzi - *terraform.NodeApplyableProvider
    strimzi_kafka_topic.mi_prueba - *terraform.NodePlannableResource
  provider.strimzi - *terraform.NodeApplyableProvider
  provider.strimzi (close) - *terraform.graphNodeCloseProvider
    provider.strimzi - *terraform.NodeApplyableProvider
    strimzi_kafka_topic.mi_prueba - *terraform.NodePlannableResource
  root - terraform.graphNodeRoot
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider.strimzi (close) - *terraform.graphNodeCloseProvider
  strimzi_kafka_topic.mi_prueba - *terraform.NodePlannableResource
    provider.strimzi - *terraform.NodeApplyableProvider
  ------
2020/05/10 23:08:11 [TRACE] Executing graph transform *terraform.TransitiveReductionTransformer
2020/05/10 23:08:11 [TRACE] Completed graph transform *terraform.TransitiveReductionTransformer with new graph:
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    strimzi_kafka_topic.mi_prueba - *terraform.NodePlannableResource
  provider.strimzi - *terraform.NodeApplyableProvider
  provider.strimzi (close) - *terraform.graphNodeCloseProvider
    strimzi_kafka_topic.mi_prueba - *terraform.NodePlannableResource
  root - terraform.graphNodeRoot
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider.strimzi (close) - *terraform.graphNodeCloseProvider
  strimzi_kafka_topic.mi_prueba - *terraform.NodePlannableResource
    provider.strimzi - *terraform.NodeApplyableProvider
  ------
2020/05/10 23:08:11 [DEBUG] Starting graph walk: walkPlan
2020/05/10 23:08:11 [TRACE] dag/walk: updating graph
2020/05/10 23:08:11 [TRACE] dag/walk: added new vertex: "strimzi_kafka_topic.mi_prueba"
2020/05/10 23:08:11 [TRACE] dag/walk: added new vertex: "provider.strimzi"
2020/05/10 23:08:11 [TRACE] dag/walk: added new vertex: "meta.count-boundary (EachMode fixup)"
2020/05/10 23:08:11 [TRACE] dag/walk: added new vertex: "provider.strimzi (close)"
2020/05/10 23:08:11 [TRACE] dag/walk: added new vertex: "root"
2020/05/10 23:08:11 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "strimzi_kafka_topic.mi_prueba"
2020/05/10 23:08:11 [TRACE] dag/walk: added edge: "provider.strimzi (close)" waiting on "strimzi_kafka_topic.mi_prueba"
2020/05/10 23:08:11 [TRACE] dag/walk: added edge: "root" waiting on "meta.count-boundary (EachMode fixup)"
2020/05/10 23:08:11 [TRACE] dag/walk: added edge: "root" waiting on "provider.strimzi (close)"
2020/05/10 23:08:11 [TRACE] dag/walk: added edge: "strimzi_kafka_topic.mi_prueba" waiting on "provider.strimzi"
2020/05/10 23:08:11 [TRACE] dag/walk: dependencies changed for "meta.count-boundary (EachMode fixup)", sending new deps
2020/05/10 23:08:11 [TRACE] dag/walk: dependencies changed for "provider.strimzi (close)", sending new deps
2020/05/10 23:08:11 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2020/05/10 23:08:11 [TRACE] dag/walk: dependencies changed for "strimzi_kafka_topic.mi_prueba", sending new deps
2020/05/10 23:08:11 [TRACE] dag/walk: visiting "provider.strimzi"
2020/05/10 23:08:11 [TRACE] vertex "provider.strimzi": starting visit (*terraform.NodeApplyableProvider)
2020/05/10 23:08:11 [TRACE] vertex "provider.strimzi": evaluating
2020/05/10 23:08:11 [TRACE] [walkPlan] Entering eval tree: provider.strimzi
2020/05/10 23:08:11 [TRACE] <root>: eval: *terraform.EvalSequence
2020/05/10 23:08:11 [TRACE] <root>: eval: *terraform.EvalInitProvider
2020-05-10T23:08:11.277-0500 [INFO]  plugin: configuring client automatic mTLS
2020-05-10T23:08:11.301-0500 [DEBUG] plugin: starting plugin: path=/Users/juancorrea/go/src/terraform-extend/strimzi-provider/terraform-provider-strimzi args=[/Users/juancorrea/go/src/terraform-extend/strimzi-provider/terraform-provider-strimzi]
2020-05-10T23:08:11.304-0500 [DEBUG] plugin: plugin started: path=/Users/juancorrea/go/src/terraform-extend/strimzi-provider/terraform-provider-strimzi pid=3777
2020-05-10T23:08:11.304-0500 [DEBUG] plugin: waiting for RPC address: path=/Users/juancorrea/go/src/terraform-extend/strimzi-provider/terraform-provider-strimzi
2020-05-10T23:08:11.325-0500 [INFO]  plugin.terraform-provider-strimzi: configuring server automatic mTLS: timestamp=2020-05-10T23:08:11.324-0500
2020-05-10T23:08:11.351-0500 [DEBUG] plugin: using plugin: version=5
2020-05-10T23:08:11.351-0500 [DEBUG] plugin.terraform-provider-strimzi: plugin address: address=/var/folders/q6/xk7zqq0s74v3njyqt9bgr5980000gn/T/plugin957758460 network=unix timestamp=2020-05-10T23:08:11.351-0500
2020/05/10 23:08:11 [TRACE] BuiltinEvalContext: Initialized "strimzi" provider for provider.strimzi
2020/05/10 23:08:11 [TRACE] <root>: eval: terraform.EvalNoop
2020/05/10 23:08:11 [TRACE] <root>: eval: terraform.EvalNoop
2020/05/10 23:08:11 [TRACE] <root>: eval: *terraform.EvalOpFilter
2020/05/10 23:08:11 [TRACE] <root>: eval: *terraform.EvalSequence
2020/05/10 23:08:11 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/05/10 23:08:11 [TRACE] <root>: eval: *terraform.EvalOpFilter
2020/05/10 23:08:11 [TRACE] <root>: eval: *terraform.EvalSequence
2020/05/10 23:08:11 [TRACE] <root>: eval: *terraform.EvalConfigProvider
2020/05/10 23:08:11 [TRACE] buildProviderConfig for provider.strimzi: using explicit config only
2020/05/10 23:08:11 [TRACE] GRPCProvider: GetSchema
2020/05/10 23:08:11 [TRACE] GRPCProvider: Configure
2020/05/10 23:08:11 [TRACE] [walkPlan] Exiting eval tree: provider.strimzi
2020/05/10 23:08:11 [TRACE] vertex "provider.strimzi": visit complete
2020/05/10 23:08:11 [TRACE] dag/walk: visiting "strimzi_kafka_topic.mi_prueba"
2020/05/10 23:08:11 [TRACE] vertex "strimzi_kafka_topic.mi_prueba": starting visit (*terraform.NodePlannableResource)
2020/05/10 23:08:11 [TRACE] vertex "strimzi_kafka_topic.mi_prueba": evaluating
2020/05/10 23:08:11 [TRACE] [walkPlan] Entering eval tree: strimzi_kafka_topic.mi_prueba
2020/05/10 23:08:11 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2020/05/10 23:08:11 [TRACE] [walkPlan] Exiting eval tree: strimzi_kafka_topic.mi_prueba
2020/05/10 23:08:11 [TRACE] vertex "strimzi_kafka_topic.mi_prueba": expanding dynamic subgraph
2020/05/10 23:08:11 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2020/05/10 23:08:11 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  strimzi_kafka_topic.mi_prueba - *terraform.NodePlannableResourceInstance
  ------
2020/05/10 23:08:11 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2020/05/10 23:08:11 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2020/05/10 23:08:11 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/05/10 23:08:11 [DEBUG] Resource instance state not found for node "strimzi_kafka_topic.mi_prueba", instance strimzi_kafka_topic.mi_prueba
2020/05/10 23:08:11 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/05/10 23:08:11 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/05/10 23:08:11 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/05/10 23:08:11 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/05/10 23:08:11 [DEBUG] ReferenceTransformer: "strimzi_kafka_topic.mi_prueba" references: []
2020/05/10 23:08:11 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/05/10 23:08:11 [TRACE] Executing graph transform *terraform.RootTransformer
2020/05/10 23:08:11 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2020/05/10 23:08:11 [TRACE] vertex "strimzi_kafka_topic.mi_prueba": entering dynamic subgraph
2020/05/10 23:08:11 [TRACE] dag/walk: updating graph
2020/05/10 23:08:11 [TRACE] dag/walk: added new vertex: "strimzi_kafka_topic.mi_prueba"
2020/05/10 23:08:11 [TRACE] dag/walk: visiting "strimzi_kafka_topic.mi_prueba"
2020/05/10 23:08:11 [TRACE] vertex "strimzi_kafka_topic.mi_prueba": starting visit (*terraform.NodePlannableResourceInstance)
2020/05/10 23:08:11 [TRACE] vertex "strimzi_kafka_topic.mi_prueba": evaluating
2020/05/10 23:08:11 [TRACE] [walkPlan] Entering eval tree: strimzi_kafka_topic.mi_prueba
2020/05/10 23:08:11 [TRACE] <root>: eval: *terraform.EvalSequence
2020/05/10 23:08:11 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/05/10 23:08:11 [TRACE] <root>: eval: *terraform.EvalReadState
2020/05/10 23:08:11 [TRACE] EvalReadState: reading state for strimzi_kafka_topic.mi_prueba
2020/05/10 23:08:11 [TRACE] EvalReadState: no state present for strimzi_kafka_topic.mi_prueba
2020/05/10 23:08:11 [TRACE] <root>: eval: *terraform.EvalValidateSelfRef
2020/05/10 23:08:11 [TRACE] <root>: eval: *terraform.EvalDiff
2020/05/10 23:08:11 [TRACE] Re-validating config for "strimzi_kafka_topic.mi_prueba"
2020/05/10 23:08:11 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2020/05/10 23:08:11 [TRACE] GRPCProvider: PlanResourceChange
2020/05/10 23:08:11 [TRACE] <root>: eval: *terraform.EvalCheckPreventDestroy
2020/05/10 23:08:11 [TRACE] <root>: eval: *terraform.EvalWriteState
2020/05/10 23:08:11 [TRACE] EvalWriteState: writing current state object for strimzi_kafka_topic.mi_prueba
2020/05/10 23:08:11 [TRACE] <root>: eval: *terraform.EvalWriteDiff
2020/05/10 23:08:11 [TRACE] EvalWriteDiff: recorded Create change for strimzi_kafka_topic.mi_prueba
2020/05/10 23:08:11 [TRACE] [walkPlan] Exiting eval tree: strimzi_kafka_topic.mi_prueba
2020/05/10 23:08:11 [TRACE] vertex "strimzi_kafka_topic.mi_prueba": visit complete
2020/05/10 23:08:11 [TRACE] vertex "strimzi_kafka_topic.mi_prueba": dynamic subgraph completed successfully
2020/05/10 23:08:11 [TRACE] vertex "strimzi_kafka_topic.mi_prueba": visit complete
2020/05/10 23:08:11 [TRACE] dag/walk: visiting "meta.count-boundary (EachMode fixup)"
2020/05/10 23:08:11 [TRACE] vertex "meta.count-boundary (EachMode fixup)": starting visit (*terraform.NodeCountBoundary)
2020/05/10 23:08:11 [TRACE] vertex "meta.count-boundary (EachMode fixup)": evaluating
2020/05/10 23:08:11 [TRACE] [walkPlan] Entering eval tree: meta.count-boundary (EachMode fixup)
2020/05/10 23:08:11 [TRACE] <root>: eval: *terraform.EvalCountFixZeroOneBoundaryGlobal
2020/05/10 23:08:11 [TRACE] dag/walk: visiting "provider.strimzi (close)"
2020/05/10 23:08:11 [TRACE] [walkPlan] Exiting eval tree: meta.count-boundary (EachMode fixup)
2020/05/10 23:08:11 [TRACE] vertex "provider.strimzi (close)": starting visit (*terraform.graphNodeCloseProvider)
2020/05/10 23:08:11 [TRACE] vertex "meta.count-boundary (EachMode fixup)": visit complete
2020/05/10 23:08:11 [TRACE] vertex "provider.strimzi (close)": evaluating
2020/05/10 23:08:11 [TRACE] [walkPlan] Entering eval tree: provider.strimzi (close)
2020/05/10 23:08:11 [TRACE] <root>: eval: *terraform.EvalCloseProvider
2020/05/10 23:08:11 [TRACE] GRPCProvider: Close
2020-05-10T23:08:11.435-0500 [DEBUG] plugin: plugin process exited: path=/Users/juancorrea/go/src/terraform-extend/strimzi-provider/terraform-provider-strimzi pid=3777
2020-05-10T23:08:11.435-0500 [DEBUG] plugin: plugin exited
2020/05/10 23:08:11 [TRACE] [walkPlan] Exiting eval tree: provider.strimzi (close)
2020/05/10 23:08:11 [TRACE] vertex "provider.strimzi (close)": visit complete
2020/05/10 23:08:11 [TRACE] dag/walk: visiting "root"
2020/05/10 23:08:11 [TRACE] vertex "root": starting visit (terraform.graphNodeRoot)
2020/05/10 23:08:11 [TRACE] vertex "root": visit complete
2020/05/10 23:08:11 [DEBUG] command: asking for input: "Do you want to perform these actions?"
2020/05/10 23:08:12 [INFO] backend/local: apply calling Apply
2020/05/10 23:08:12 [INFO] terraform: building graph: GraphTypeApply
2020/05/10 23:08:12 [TRACE] Executing graph transform *terraform.ConfigTransformer
2020/05/10 23:08:12 [TRACE] ConfigTransformer: Starting for path: 
2020/05/10 23:08:12 [TRACE] Completed graph transform *terraform.ConfigTransformer with new graph:
  strimzi_kafka_topic.mi_prueba (prepare state) - *terraform.NodeApplyableResource
  ------
2020/05/10 23:08:12 [TRACE] Executing graph transform *terraform.DiffTransformer
2020/05/10 23:08:12 [TRACE] DiffTransformer starting
2020/05/10 23:08:12 [TRACE] DiffTransformer: found Create change for strimzi_kafka_topic.mi_prueba 
2020/05/10 23:08:12 [TRACE] DiffTransformer: strimzi_kafka_topic.mi_prueba will be represented by strimzi_kafka_topic.mi_prueba
2020/05/10 23:08:12 [TRACE] DiffTransformer complete
2020/05/10 23:08:12 [TRACE] Completed graph transform *terraform.DiffTransformer with new graph:
  strimzi_kafka_topic.mi_prueba - *terraform.NodeApplyableResourceInstance
    strimzi_kafka_topic.mi_prueba (prepare state) - *terraform.NodeApplyableResource
  strimzi_kafka_topic.mi_prueba (prepare state) - *terraform.NodeApplyableResource
  ------
2020/05/10 23:08:12 [TRACE] Executing graph transform *terraform.OrphanResourceTransformer
2020/05/10 23:08:12 [TRACE] Completed graph transform *terraform.OrphanResourceTransformer (no changes)
2020/05/10 23:08:12 [TRACE] Executing graph transform *terraform.OrphanOutputTransformer
2020/05/10 23:08:12 [TRACE] Completed graph transform *terraform.OrphanOutputTransformer (no changes)
2020/05/10 23:08:12 [TRACE] Executing graph transform *terraform.AttachResourceConfigTransformer
2020/05/10 23:08:12 [TRACE] AttachResourceConfigTransformer: attaching to "strimzi_kafka_topic.mi_prueba (prepare state)" (*terraform.NodeApplyableResource) config from main.tf:8,1-43
2020/05/10 23:08:12 [TRACE] AttachResourceConfigTransformer: attaching to "strimzi_kafka_topic.mi_prueba" (*terraform.NodeApplyableResourceInstance) config from main.tf:8,1-43
2020/05/10 23:08:12 [TRACE] Completed graph transform *terraform.AttachResourceConfigTransformer (no changes)
2020/05/10 23:08:12 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/05/10 23:08:12 [DEBUG] Resource state not found for node "strimzi_kafka_topic.mi_prueba", instance strimzi_kafka_topic.mi_prueba
2020/05/10 23:08:12 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/05/10 23:08:12 [TRACE] Executing graph transform *terraform.MissingProvisionerTransformer
2020/05/10 23:08:12 [TRACE] Completed graph transform *terraform.MissingProvisionerTransformer (no changes)
2020/05/10 23:08:12 [TRACE] Executing graph transform *terraform.ProvisionerTransformer
2020/05/10 23:08:12 [TRACE] Completed graph transform *terraform.ProvisionerTransformer (no changes)
2020/05/10 23:08:12 [TRACE] Executing graph transform *terraform.RootVariableTransformer
2020/05/10 23:08:12 [TRACE] Completed graph transform *terraform.RootVariableTransformer (no changes)
2020/05/10 23:08:12 [TRACE] Executing graph transform *terraform.LocalTransformer
2020/05/10 23:08:12 [TRACE] Completed graph transform *terraform.LocalTransformer (no changes)
2020/05/10 23:08:12 [TRACE] Executing graph transform *terraform.OutputTransformer
2020/05/10 23:08:12 [TRACE] Completed graph transform *terraform.OutputTransformer (no changes)
2020/05/10 23:08:12 [TRACE] Executing graph transform *terraform.ModuleVariableTransformer
2020/05/10 23:08:12 [TRACE] Completed graph transform *terraform.ModuleVariableTransformer (no changes)
2020/05/10 23:08:12 [TRACE] Executing graph transform *terraform.graphTransformerMulti
2020/05/10 23:08:12 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderConfigTransformer
2020/05/10 23:08:12 [TRACE] ProviderConfigTransformer: attaching to "provider.strimzi" provider configuration from main.tf:6,1-19
2020/05/10 23:08:12 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderConfigTransformer with new graph:
  provider.strimzi - *terraform.NodeApplyableProvider
  strimzi_kafka_topic.mi_prueba - *terraform.NodeApplyableResourceInstance
    strimzi_kafka_topic.mi_prueba (prepare state) - *terraform.NodeApplyableResource
  strimzi_kafka_topic.mi_prueba (prepare state) - *terraform.NodeApplyableResource
  ------
2020/05/10 23:08:12 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.MissingProviderTransformer
2020/05/10 23:08:12 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.MissingProviderTransformer (no changes)
2020/05/10 23:08:12 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderTransformer
2020/05/10 23:08:12 [TRACE] ProviderTransformer: strimzi_kafka_topic.mi_prueba (prepare state) is provided by provider.strimzi or inherited equivalent
2020/05/10 23:08:12 [TRACE] ProviderTransformer: strimzi_kafka_topic.mi_prueba is provided by provider.strimzi or inherited equivalent
2020/05/10 23:08:12 [TRACE] ProviderTransformer: exact match for provider.strimzi serving strimzi_kafka_topic.mi_prueba (prepare state)
2020/05/10 23:08:12 [DEBUG] ProviderTransformer: "strimzi_kafka_topic.mi_prueba (prepare state)" (*terraform.NodeApplyableResource) needs provider.strimzi
2020/05/10 23:08:12 [TRACE] ProviderTransformer: exact match for provider.strimzi serving strimzi_kafka_topic.mi_prueba
2020/05/10 23:08:12 [DEBUG] ProviderTransformer: "strimzi_kafka_topic.mi_prueba" (*terraform.NodeApplyableResourceInstance) needs provider.strimzi
2020/05/10 23:08:12 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderTransformer with new graph:
  provider.strimzi - *terraform.NodeApplyableProvider
  strimzi_kafka_topic.mi_prueba - *terraform.NodeApplyableResourceInstance
    provider.strimzi - *terraform.NodeApplyableProvider
    strimzi_kafka_topic.mi_prueba (prepare state) - *terraform.NodeApplyableResource
  strimzi_kafka_topic.mi_prueba (prepare state) - *terraform.NodeApplyableResource
    provider.strimzi - *terraform.NodeApplyableProvider
  ------
2020/05/10 23:08:12 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.PruneProviderTransformer
2020/05/10 23:08:12 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.PruneProviderTransformer (no changes)
2020/05/10 23:08:12 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ParentProviderTransformer
2020/05/10 23:08:12 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ParentProviderTransformer (no changes)
2020/05/10 23:08:12 [TRACE] Completed graph transform *terraform.graphTransformerMulti with new graph:
  provider.strimzi - *terraform.NodeApplyableProvider
  strimzi_kafka_topic.mi_prueba - *terraform.NodeApplyableResourceInstance
    provider.strimzi - *terraform.NodeApplyableProvider
    strimzi_kafka_topic.mi_prueba (prepare state) - *terraform.NodeApplyableResource
  strimzi_kafka_topic.mi_prueba (prepare state) - *terraform.NodeApplyableResource
    provider.strimzi - *terraform.NodeApplyableProvider
  ------
2020/05/10 23:08:12 [TRACE] Executing graph transform *terraform.RemovedModuleTransformer
2020/05/10 23:08:12 [TRACE] Completed graph transform *terraform.RemovedModuleTransformer (no changes)
2020/05/10 23:08:12 [TRACE] Executing graph transform *terraform.AttachSchemaTransformer
2020/05/10 23:08:12 [TRACE] AttachSchemaTransformer: attaching resource schema to strimzi_kafka_topic.mi_prueba
2020/05/10 23:08:12 [TRACE] AttachSchemaTransformer: attaching provider config schema to provider.strimzi
2020/05/10 23:08:12 [TRACE] AttachSchemaTransformer: attaching resource schema to strimzi_kafka_topic.mi_prueba (prepare state)
2020/05/10 23:08:12 [TRACE] Completed graph transform *terraform.AttachSchemaTransformer (no changes)
2020/05/10 23:08:12 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/05/10 23:08:12 [DEBUG] ReferenceTransformer: "provider.strimzi" references: []
2020/05/10 23:08:12 [DEBUG] ReferenceTransformer: "strimzi_kafka_topic.mi_prueba (prepare state)" references: []
2020/05/10 23:08:12 [DEBUG] ReferenceTransformer: "strimzi_kafka_topic.mi_prueba" references: []
2020/05/10 23:08:12 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/05/10 23:08:12 [TRACE] Executing graph transform *terraform.AttachDependenciesTransformer
2020/05/10 23:08:12 [TRACE] AttachDependenciesTransformer: strimzi_kafka_topic.mi_prueba depends on []
2020/05/10 23:08:12 [TRACE] Completed graph transform *terraform.AttachDependenciesTransformer (no changes)
2020/05/10 23:08:12 [TRACE] Executing graph transform *terraform.DestroyEdgeTransformer
2020/05/10 23:08:12 [TRACE] Completed graph transform *terraform.DestroyEdgeTransformer (no changes)
2020/05/10 23:08:12 [TRACE] Executing graph transform *terraform.CBDEdgeTransformer
2020/05/10 23:08:12 [TRACE] Completed graph transform *terraform.CBDEdgeTransformer (no changes)
2020/05/10 23:08:12 [TRACE] Executing graph transform *terraform.PruneUnusedValuesTransformer
2020/05/10 23:08:12 [TRACE] Completed graph transform *terraform.PruneUnusedValuesTransformer (no changes)
2020/05/10 23:08:12 [TRACE] Executing graph transform *terraform.CountBoundaryTransformer
2020/05/10 23:08:12 [TRACE] Completed graph transform *terraform.CountBoundaryTransformer with new graph:
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider.strimzi - *terraform.NodeApplyableProvider
    strimzi_kafka_topic.mi_prueba - *terraform.NodeApplyableResourceInstance
    strimzi_kafka_topic.mi_prueba (prepare state) - *terraform.NodeApplyableResource
  provider.strimzi - *terraform.NodeApplyableProvider
  strimzi_kafka_topic.mi_prueba - *terraform.NodeApplyableResourceInstance
    provider.strimzi - *terraform.NodeApplyableProvider
    strimzi_kafka_topic.mi_prueba (prepare state) - *terraform.NodeApplyableResource
  strimzi_kafka_topic.mi_prueba (prepare state) - *terraform.NodeApplyableResource
    provider.strimzi - *terraform.NodeApplyableProvider
  ------
2020/05/10 23:08:12 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/05/10 23:08:12 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/05/10 23:08:12 [TRACE] Executing graph transform *terraform.CloseProviderTransformer
2020/05/10 23:08:12 [TRACE] Completed graph transform *terraform.CloseProviderTransformer with new graph:
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider.strimzi - *terraform.NodeApplyableProvider
    strimzi_kafka_topic.mi_prueba - *terraform.NodeApplyableResourceInstance
    strimzi_kafka_topic.mi_prueba (prepare state) - *terraform.NodeApplyableResource
  provider.strimzi - *terraform.NodeApplyableProvider
  provider.strimzi (close) - *terraform.graphNodeCloseProvider
    provider.strimzi - *terraform.NodeApplyableProvider
    strimzi_kafka_topic.mi_prueba - *terraform.NodeApplyableResourceInstance
    strimzi_kafka_topic.mi_prueba (prepare state) - *terraform.NodeApplyableResource
  strimzi_kafka_topic.mi_prueba - *terraform.NodeApplyableResourceInstance
    provider.strimzi - *terraform.NodeApplyableProvider
    strimzi_kafka_topic.mi_prueba (prepare state) - *terraform.NodeApplyableResource
  strimzi_kafka_topic.mi_prueba (prepare state) - *terraform.NodeApplyableResource
    provider.strimzi - *terraform.NodeApplyableProvider
  ------
2020/05/10 23:08:12 [TRACE] Executing graph transform *terraform.CloseProvisionerTransformer
2020/05/10 23:08:12 [TRACE] Completed graph transform *terraform.CloseProvisionerTransformer (no changes)
2020/05/10 23:08:12 [TRACE] Executing graph transform *terraform.RootTransformer
2020/05/10 23:08:12 [TRACE] Completed graph transform *terraform.RootTransformer with new graph:
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider.strimzi - *terraform.NodeApplyableProvider
    strimzi_kafka_topic.mi_prueba - *terraform.NodeApplyableResourceInstance
    strimzi_kafka_topic.mi_prueba (prepare state) - *terraform.NodeApplyableResource
  provider.strimzi - *terraform.NodeApplyableProvider
  provider.strimzi (close) - *terraform.graphNodeCloseProvider
    provider.strimzi - *terraform.NodeApplyableProvider
    strimzi_kafka_topic.mi_prueba - *terraform.NodeApplyableResourceInstance
    strimzi_kafka_topic.mi_prueba (prepare state) - *terraform.NodeApplyableResource
  root - terraform.graphNodeRoot
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider.strimzi (close) - *terraform.graphNodeCloseProvider
  strimzi_kafka_topic.mi_prueba - *terraform.NodeApplyableResourceInstance
    provider.strimzi - *terraform.NodeApplyableProvider
    strimzi_kafka_topic.mi_prueba (prepare state) - *terraform.NodeApplyableResource
  strimzi_kafka_topic.mi_prueba (prepare state) - *terraform.NodeApplyableResource
    provider.strimzi - *terraform.NodeApplyableProvider
  ------
2020/05/10 23:08:12 [TRACE] Executing graph transform *terraform.TransitiveReductionTransformer
2020/05/10 23:08:12 [TRACE] Completed graph transform *terraform.TransitiveReductionTransformer with new graph:
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    strimzi_kafka_topic.mi_prueba - *terraform.NodeApplyableResourceInstance
  provider.strimzi - *terraform.NodeApplyableProvider
  provider.strimzi (close) - *terraform.graphNodeCloseProvider
    strimzi_kafka_topic.mi_prueba - *terraform.NodeApplyableResourceInstance
  root - terraform.graphNodeRoot
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider.strimzi (close) - *terraform.graphNodeCloseProvider
  strimzi_kafka_topic.mi_prueba - *terraform.NodeApplyableResourceInstance
    strimzi_kafka_topic.mi_prueba (prepare state) - *terraform.NodeApplyableResource
  strimzi_kafka_topic.mi_prueba (prepare state) - *terraform.NodeApplyableResource
    provider.strimzi - *terraform.NodeApplyableProvider
  ------
2020/05/10 23:08:12 [DEBUG] Starting graph walk: walkApply
2020/05/10 23:08:12 [TRACE] dag/walk: updating graph
2020/05/10 23:08:12 [TRACE] dag/walk: added new vertex: "strimzi_kafka_topic.mi_prueba (prepare state)"
2020/05/10 23:08:12 [TRACE] dag/walk: added new vertex: "strimzi_kafka_topic.mi_prueba"
2020/05/10 23:08:12 [TRACE] dag/walk: added new vertex: "provider.strimzi"
2020/05/10 23:08:12 [TRACE] dag/walk: added new vertex: "meta.count-boundary (EachMode fixup)"
2020/05/10 23:08:12 [TRACE] dag/walk: added new vertex: "provider.strimzi (close)"
2020/05/10 23:08:12 [TRACE] dag/walk: added new vertex: "root"
2020/05/10 23:08:12 [TRACE] dag/walk: added edge: "strimzi_kafka_topic.mi_prueba (prepare state)" waiting on "provider.strimzi"
2020/05/10 23:08:12 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "strimzi_kafka_topic.mi_prueba"
2020/05/10 23:08:12 [TRACE] dag/walk: added edge: "root" waiting on "provider.strimzi (close)"
2020/05/10 23:08:12 [TRACE] dag/walk: added edge: "strimzi_kafka_topic.mi_prueba" waiting on "strimzi_kafka_topic.mi_prueba (prepare state)"
2020/05/10 23:08:12 [TRACE] dag/walk: added edge: "provider.strimzi (close)" waiting on "strimzi_kafka_topic.mi_prueba"
2020/05/10 23:08:12 [TRACE] dag/walk: added edge: "root" waiting on "meta.count-boundary (EachMode fixup)"
2020/05/10 23:08:12 [TRACE] dag/walk: dependencies changed for "meta.count-boundary (EachMode fixup)", sending new deps
2020/05/10 23:08:12 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2020/05/10 23:08:12 [TRACE] dag/walk: dependencies changed for "strimzi_kafka_topic.mi_prueba", sending new deps
2020/05/10 23:08:12 [TRACE] dag/walk: dependencies changed for "provider.strimzi (close)", sending new deps
2020/05/10 23:08:12 [TRACE] dag/walk: dependencies changed for "strimzi_kafka_topic.mi_prueba (prepare state)", sending new deps
2020/05/10 23:08:12 [TRACE] dag/walk: visiting "provider.strimzi"
2020/05/10 23:08:12 [TRACE] vertex "provider.strimzi": starting visit (*terraform.NodeApplyableProvider)
2020/05/10 23:08:12 [TRACE] vertex "provider.strimzi": evaluating
2020/05/10 23:08:12 [TRACE] [walkApply] Entering eval tree: provider.strimzi
2020/05/10 23:08:12 [TRACE] <root>: eval: *terraform.EvalSequence
2020/05/10 23:08:12 [TRACE] <root>: eval: *terraform.EvalInitProvider
2020-05-10T23:08:12.957-0500 [INFO]  plugin: configuring client automatic mTLS
2020-05-10T23:08:12.982-0500 [DEBUG] plugin: starting plugin: path=/Users/juancorrea/go/src/terraform-extend/strimzi-provider/terraform-provider-strimzi args=[/Users/juancorrea/go/src/terraform-extend/strimzi-provider/terraform-provider-strimzi]
2020-05-10T23:08:12.985-0500 [DEBUG] plugin: plugin started: path=/Users/juancorrea/go/src/terraform-extend/strimzi-provider/terraform-provider-strimzi pid=3780
2020-05-10T23:08:12.985-0500 [DEBUG] plugin: waiting for RPC address: path=/Users/juancorrea/go/src/terraform-extend/strimzi-provider/terraform-provider-strimzi
2020-05-10T23:08:13.006-0500 [INFO]  plugin.terraform-provider-strimzi: configuring server automatic mTLS: timestamp=2020-05-10T23:08:13.006-0500
2020-05-10T23:08:13.031-0500 [DEBUG] plugin: using plugin: version=5
2020-05-10T23:08:13.031-0500 [DEBUG] plugin.terraform-provider-strimzi: plugin address: address=/var/folders/q6/xk7zqq0s74v3njyqt9bgr5980000gn/T/plugin231538331 network=unix timestamp=2020-05-10T23:08:13.031-0500
2020/05/10 23:08:13 [TRACE] BuiltinEvalContext: Initialized "strimzi" provider for provider.strimzi
2020/05/10 23:08:13 [TRACE] <root>: eval: terraform.EvalNoop
2020/05/10 23:08:13 [TRACE] <root>: eval: terraform.EvalNoop
2020/05/10 23:08:13 [TRACE] <root>: eval: *terraform.EvalOpFilter
2020/05/10 23:08:13 [TRACE] <root>: eval: *terraform.EvalSequence
2020/05/10 23:08:13 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/05/10 23:08:13 [TRACE] <root>: eval: *terraform.EvalOpFilter
2020/05/10 23:08:13 [TRACE] <root>: eval: *terraform.EvalSequence
2020/05/10 23:08:13 [TRACE] <root>: eval: *terraform.EvalConfigProvider
2020/05/10 23:08:13 [TRACE] buildProviderConfig for provider.strimzi: using explicit config only
2020/05/10 23:08:13 [TRACE] GRPCProvider: GetSchema
2020/05/10 23:08:13 [TRACE] GRPCProvider: Configure
2020/05/10 23:08:13 [TRACE] [walkApply] Exiting eval tree: provider.strimzi
2020/05/10 23:08:13 [TRACE] vertex "provider.strimzi": visit complete
2020/05/10 23:08:13 [TRACE] dag/walk: visiting "strimzi_kafka_topic.mi_prueba (prepare state)"
2020/05/10 23:08:13 [TRACE] vertex "strimzi_kafka_topic.mi_prueba (prepare state)": starting visit (*terraform.NodeApplyableResource)
2020/05/10 23:08:13 [TRACE] vertex "strimzi_kafka_topic.mi_prueba (prepare state)": evaluating
2020/05/10 23:08:13 [TRACE] [walkApply] Entering eval tree: strimzi_kafka_topic.mi_prueba (prepare state)
2020/05/10 23:08:13 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2020/05/10 23:08:13 [TRACE] [walkApply] Exiting eval tree: strimzi_kafka_topic.mi_prueba (prepare state)
2020/05/10 23:08:13 [TRACE] vertex "strimzi_kafka_topic.mi_prueba (prepare state)": visit complete
2020/05/10 23:08:13 [TRACE] dag/walk: visiting "strimzi_kafka_topic.mi_prueba"
2020/05/10 23:08:13 [TRACE] vertex "strimzi_kafka_topic.mi_prueba": starting visit (*terraform.NodeApplyableResourceInstance)
2020/05/10 23:08:13 [TRACE] vertex "strimzi_kafka_topic.mi_prueba": evaluating
2020/05/10 23:08:13 [TRACE] [walkApply] Entering eval tree: strimzi_kafka_topic.mi_prueba
2020/05/10 23:08:13 [TRACE] <root>: eval: *terraform.EvalSequence
2020/05/10 23:08:13 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/05/10 23:08:13 [TRACE] <root>: eval: *terraform.EvalReadDiff
2020/05/10 23:08:13 [TRACE] EvalReadDiff: Read Create change from plan for strimzi_kafka_topic.mi_prueba
2020/05/10 23:08:13 [TRACE] <root>: eval: *terraform.EvalIf
2020/05/10 23:08:13 [TRACE] <root>: eval: terraform.EvalNoop
2020/05/10 23:08:13 [TRACE] <root>: eval: *terraform.EvalIf
2020/05/10 23:08:13 [TRACE] <root>: eval: *terraform.EvalReadState
2020/05/10 23:08:13 [TRACE] EvalReadState: reading state for strimzi_kafka_topic.mi_prueba
2020/05/10 23:08:13 [TRACE] EvalReadState: no state present for strimzi_kafka_topic.mi_prueba
2020/05/10 23:08:13 [TRACE] <root>: eval: *terraform.EvalReadDiff
2020/05/10 23:08:13 [TRACE] EvalReadDiff: Read Create change from plan for strimzi_kafka_topic.mi_prueba
2020/05/10 23:08:13 [TRACE] <root>: eval: *terraform.EvalDiff
2020/05/10 23:08:13 [TRACE] Re-validating config for "strimzi_kafka_topic.mi_prueba"
2020/05/10 23:08:13 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2020/05/10 23:08:13 [TRACE] GRPCProvider: PlanResourceChange
2020/05/10 23:08:13 [TRACE] <root>: eval: *terraform.EvalCheckPlannedChange
2020/05/10 23:08:13 [TRACE] EvalCheckPlannedChange: Verifying that actual change (action Create) matches planned change (action Create)
2020/05/10 23:08:13 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/05/10 23:08:13 [TRACE] <root>: eval: *terraform.EvalReadState
2020/05/10 23:08:13 [TRACE] EvalReadState: reading state for strimzi_kafka_topic.mi_prueba
2020/05/10 23:08:13 [TRACE] EvalReadState: no state present for strimzi_kafka_topic.mi_prueba
2020/05/10 23:08:13 [TRACE] <root>: eval: *terraform.EvalReduceDiff
2020/05/10 23:08:13 [TRACE] <root>: eval: *terraform.EvalIf
2020/05/10 23:08:13 [TRACE] <root>: eval: terraform.EvalNoop
2020/05/10 23:08:13 [TRACE] <root>: eval: *terraform.EvalApplyPre
2020/05/10 23:08:13 [TRACE] <root>: eval: *terraform.EvalApply
2020/05/10 23:08:13 [DEBUG] strimzi_kafka_topic.mi_prueba: applying the planned Create change
2020/05/10 23:08:13 [TRACE] GRPCProvider: ApplyResourceChange
2020-05-10T23:08:13.089-0500 [DEBUG] plugin.terraform-provider-strimzi: panic: interface conversion: interface {} is map[string]interface {}, not map[string]string
2020-05-10T23:08:13.089-0500 [DEBUG] plugin.terraform-provider-strimzi: 
2020-05-10T23:08:13.089-0500 [DEBUG] plugin.terraform-provider-strimzi: goroutine 56 [running]:
2020-05-10T23:08:13.089-0500 [DEBUG] plugin.terraform-provider-strimzi: main.resourceServerCreate(0xc0002a5e30, 0x0, 0x0, 0x2, 0x352d200)
2020-05-10T23:08:13.089-0500 [DEBUG] plugin.terraform-provider-strimzi: 	/Users/juancorrea/go/src/terraform-extend/strimzi-provider/resource_kafka_topic.go:81 +0x46f
2020-05-10T23:08:13.089-0500 [DEBUG] plugin.terraform-provider-strimzi: github.com/hashicorp/terraform-plugin-sdk/helper/schema.(*Resource).Apply(0xc0000aa1b0, 0xc000148500, 0xc000663be0, 0x0, 0x0, 0x231e201, 0xc0004db898, 0xc0001470b0)
2020-05-10T23:08:13.089-0500 [DEBUG] plugin.terraform-provider-strimzi: 	/Users/juancorrea/go/pkg/mod/github.com/hashicorp/terraform-plugin-sdk@v1.11.0/helper/schema/resource.go:310 +0x365
2020-05-10T23:08:13.089-0500 [DEBUG] plugin.terraform-provider-strimzi: github.com/hashicorp/terraform-plugin-sdk/helper/schema.(*Provider).Apply(0xc0000a9c00, 0xc000145a10, 0xc000148500, 0xc000663be0, 0xc00011f288, 0xc000282938, 0x2320580)
2020-05-10T23:08:13.089-0500 [DEBUG] plugin.terraform-provider-strimzi: 	/Users/juancorrea/go/pkg/mod/github.com/hashicorp/terraform-plugin-sdk@v1.11.0/helper/schema/provider.go:294 +0x99
2020-05-10T23:08:13.090-0500 [DEBUG] plugin.terraform-provider-strimzi: github.com/hashicorp/terraform-plugin-sdk/internal/helper/plugin.(*GRPCProviderServer).ApplyResourceChange(0xc000282820, 0x2886180, 0xc0001465d0, 0xc0002a5880, 0xc000282820, 0xc0001465d0, 0xc00006fb78)
2020-05-10T23:08:13.090-0500 [DEBUG] plugin.terraform-provider-strimzi: 	/Users/juancorrea/go/pkg/mod/github.com/hashicorp/terraform-plugin-sdk@v1.11.0/internal/helper/plugin/grpc_provider.go:885 +0x8b4
2020-05-10T23:08:13.090-0500 [DEBUG] plugin.terraform-provider-strimzi: github.com/hashicorp/terraform-plugin-sdk/internal/tfplugin5._Provider_ApplyResourceChange_Handler(0x24afc60, 0xc000282820, 0x2886180, 0xc0001465d0, 0xc000097c20, 0x0, 0x2886180, 0xc0001465d0, 0xc0005d8580, 0x158)
2020-05-10T23:08:13.090-0500 [DEBUG] plugin.terraform-provider-strimzi: 	/Users/juancorrea/go/pkg/mod/github.com/hashicorp/terraform-plugin-sdk@v1.11.0/internal/tfplugin5/tfplugin5.pb.go:3305 +0x217
2020-05-10T23:08:13.090-0500 [DEBUG] plugin.terraform-provider-strimzi: google.golang.org/grpc.(*Server).processUnaryRPC(0xc00008ac00, 0x289a6c0, 0xc000186f00, 0xc000108100, 0xc0000297d0, 0x34e9a60, 0x0, 0x0, 0x0)
2020-05-10T23:08:13.090-0500 [DEBUG] plugin.terraform-provider-strimzi: 	/Users/juancorrea/go/pkg/mod/google.golang.org/grpc@v1.27.1/server.go:1024 +0x501
2020-05-10T23:08:13.090-0500 [DEBUG] plugin.terraform-provider-strimzi: google.golang.org/grpc.(*Server).handleStream(0xc00008ac00, 0x289a6c0, 0xc000186f00, 0xc000108100, 0x0)
2020-05-10T23:08:13.090-0500 [DEBUG] plugin.terraform-provider-strimzi: 	/Users/juancorrea/go/pkg/mod/google.golang.org/grpc@v1.27.1/server.go:1313 +0xd3d
2020-05-10T23:08:13.090-0500 [DEBUG] plugin.terraform-provider-strimzi: google.golang.org/grpc.(*Server).serveStreams.func1.1(0xc00028c310, 0xc00008ac00, 0x289a6c0, 0xc000186f00, 0xc000108100)
2020-05-10T23:08:13.090-0500 [DEBUG] plugin.terraform-provider-strimzi: 	/Users/juancorrea/go/pkg/mod/google.golang.org/grpc@v1.27.1/server.go:722 +0xa1
2020-05-10T23:08:13.090-0500 [DEBUG] plugin.terraform-provider-strimzi: created by google.golang.org/grpc.(*Server).serveStreams.func1
2020-05-10T23:08:13.090-0500 [DEBUG] plugin.terraform-provider-strimzi: 	/Users/juancorrea/go/pkg/mod/google.golang.org/grpc@v1.27.1/server.go:720 +0xa1
2020/05/10 23:08:13 [DEBUG] strimzi_kafka_topic.mi_prueba: apply errored, but we're indicating that via the Error pointer rather than returning it: rpc error: code = Unavailable desc = transport is closing
2020/05/10 23:08:13 [TRACE] <root>: eval: *terraform.EvalMaybeTainted
2020/05/10 23:08:13 [TRACE] EvalMaybeTainted: strimzi_kafka_topic.mi_prueba encountered an error during creation, so it is now marked as tainted
2020/05/10 23:08:13 [TRACE] <root>: eval: *terraform.EvalWriteState
2020/05/10 23:08:13 [TRACE] EvalWriteState: removing state object for strimzi_kafka_topic.mi_prueba
2020/05/10 23:08:13 [TRACE] <root>: eval: *terraform.EvalApplyProvisioners
2020/05/10 23:08:13 [TRACE] EvalApplyProvisioners: strimzi_kafka_topic.mi_prueba has no state, so skipping provisioners
2020/05/10 23:08:13 [TRACE] <root>: eval: *terraform.EvalMaybeTainted
2020/05/10 23:08:13 [TRACE] EvalMaybeTainted: strimzi_kafka_topic.mi_prueba encountered an error during creation, so it is now marked as tainted
2020/05/10 23:08:13 [TRACE] <root>: eval: *terraform.EvalWriteState
2020/05/10 23:08:13 [TRACE] EvalWriteState: removing state object for strimzi_kafka_topic.mi_prueba
2020/05/10 23:08:13 [TRACE] <root>: eval: *terraform.EvalIf
2020/05/10 23:08:13 [TRACE] <root>: eval: *terraform.EvalIf
2020/05/10 23:08:13 [TRACE] <root>: eval: *terraform.EvalWriteDiff
2020/05/10 23:08:13 [TRACE] <root>: eval: *terraform.EvalApplyPost
2020/05/10 23:08:13 [ERROR] <root>: eval: *terraform.EvalApplyPost, err: rpc error: code = Unavailable desc = transport is closing
2020/05/10 23:08:13 [ERROR] <root>: eval: *terraform.EvalSequence, err: rpc error: code = Unavailable desc = transport is closing
2020/05/10 23:08:13 [TRACE] [walkApply] Exiting eval tree: strimzi_kafka_topic.mi_prueba
2020/05/10 23:08:13 [TRACE] vertex "strimzi_kafka_topic.mi_prueba": visit complete
2020/05/10 23:08:13 [TRACE] dag/walk: upstream of "meta.count-boundary (EachMode fixup)" errored, so skipping
2020/05/10 23:08:13 [TRACE] dag/walk: upstream of "provider.strimzi (close)" errored, so skipping
2020-05-10T23:08:13.091-0500 [DEBUG] plugin: plugin process exited: path=/Users/juancorrea/go/src/terraform-extend/strimzi-provider/terraform-provider-strimzi pid=3780 error="exit status 2"
2020/05/10 23:08:13 [TRACE] dag/walk: upstream of "root" errored, so skipping
2020/05/10 23:08:13 [TRACE] statemgr.Filesystem: not making a backup, because the new snapshot is identical to the old
2020/05/10 23:08:13 [TRACE] statemgr.Filesystem: no state changes since last snapshot
2020/05/10 23:08:13 [TRACE] statemgr.Filesystem: writing snapshot at terraform.tfstate
2020/05/10 23:08:13 [TRACE] statemgr.Filesystem: removing lock metadata file .terraform.tfstate.lock.info
2020/05/10 23:08:13 [TRACE] statemgr.Filesystem: unlocking terraform.tfstate using fcntl flock
2020-05-10T23:08:13.107-0500 [DEBUG] plugin: plugin exited
